name: "Rust Setup"
description: "Sets up an environment for running rust commands (clippy, doc, test, etc.)"

inputs:
  dependencies:
    required: false
    description: "A list of ubuntu packages to install"
  pip-packages:
    required: false
    description: "A list of pip packages to install"
  custom-protoc-release-zip:
    required: false
    description: "Custrom protoc release page zip name"
  custom-protoc-version:
    required: false
    description: "A custom protoc version"
  rust-version:
    required: false
    default: stable
    description: "Specific rust version to use, defaults to the latest"
  cloudsmith-cargo-registry:
    required: false
    description: "The CLOUDSMITH_CARGO_REGISTRY secret"
  cloudsmith-git-api-key:
    required: false
    description: "The CLOUDSMITH_GIT_API_KEY secret"

runs:
  using: composite
  steps:
    - name: install dependencies
      shell: bash
      if: ${{ inputs.dependencies }}
      run: |
        sudo apt-get update -y
        echo ${{ inputs.dependencies }} | sed -e 's/\n//g' | xargs sudo apt install
    - name: install dependencies
      shell: bash
      if: ${{ inputs.pip-packages }}
      run: |
        sudo apt-get update -y
        sudo apt-get install python3-pip
        echo ${{ inputs.pip-packages }} | sed -e 's/\n//g' | xargs sudo pip3 install
    - name: install custom protoc
      shell: bash
      if: ${{ inputs.custom-protoc-version }}
      run: |
        curl -OL https://github.com/protocolbuffers/protobuf/releases/download/${{ inputs.custom-protoc-version }}/${{ inputs.custom-protoc-release-zip }} \
          && unzip -o ${{ inputs.custom-protoc-release-zip }} -d /usr/local bin/protoc \
          && rm -f ${{ inputs.custom-protoc-release-zip }}
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust-version || 'stable' }}
        components: clippy, rustfmt
    - name: setup cloudsmith cargo registry
      shell: bash
      if: ${{ inputs.cloudsmith-cargo-registry }}
      run: |
        git config --global credential.helper store
        echo '${{ inputs.cloudsmith-cargo-registry }}' > ~/.cargo/config
    - name: setup cloudsmith git api key
      shell: bash
      if: ${{ inputs.cloudsmith-git-api-key }}
      run: |
        git config --global credential.helper store
        echo '${{ inputs.cloudsmith-git-api-key }}' > ~/.git-credentials
