name: 'Rust Setup'
description: 'Sets up an environment for running rust commands (clippy, doc, test, etc.)'

inputs:
  dependencies:
    required: false
    description: 'A list of ubuntu packages to install'
  pip-requirements:
    required: false
    description: 'A list of requirements.txt files to install'
  custom-protoc-release-zip:
    required: false
    description: 'Custrom protoc release page zip name'
  custom-protoc-version:
    required: false
    description: 'A custom protoc version'
  rust-version:
    required: false
    default: stable
    description: 'Specific rust version to use, defaults to the latest'
  cloudsmith-api-key:
    required: false
    description: 'The CLOUDSMITH_API_KEY secret'

runs:
  using: composite
  steps:
    - name: install dependencies
      shell: bash
      if: ${{ inputs.dependencies }}
      run: |
        sudo apt-get update -y
        echo ${{ inputs.dependencies }} | sed -e 's/\n//g' | xargs sudo apt install
    - name: install python dependencies
      uses: getsentry/action-setup-venv@v2.1.0
      if: ${{ inputs.pip-requirements }}
      with:
        python-version: 3.10.7
        cache-dependency-path: ${{ inputs.pip-requirements }}
        install-cmd: echo ${{ inputs.pip-requirements }} | sed -e 's/\n//g' | xargs pip3 install -r
    - name: install custom protoc
      shell: bash
      if: ${{ inputs.custom-protoc-version }}
      run: |
        curl -OL https://github.com/protocolbuffers/protobuf/releases/download/${{ inputs.custom-protoc-version }}/${{ inputs.custom-protoc-release-zip }} \
          && unzip -o ${{ inputs.custom-protoc-release-zip }} -d /usr/local bin/protoc \
          && rm -f ${{ inputs.custom-protoc-release-zip }}
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.rust-version || 'stable' }}
        components: clippy, rustfmt
    - name: setup cloudsmith credentials
      shell: bash
      if: ${{ inputs.cloudsmith-api-key }}
      run: |
        export API_KEY=${{ inputs.cloudsmith-api-key }}
        echo "[registries.orcalabs-orcastrator]
          index = \"sparse+https://cargo.cloudsmith.io/orcalabs/orcastrator/\"
          token = \"Token $API_KEY\"
          credential-provider = \"cargo:token\"" >> ~/.cargo/config.toml
