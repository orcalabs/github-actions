name: Build and deploy container apps images

on:
  workflow_call:
    inputs:
      object:
        required: true
        type: string
        description: JSON object of images to build and push
      registry:
        required: true
        type: string
        description: The registry of the docker images
      container-app-resource-group:
        required: false
        type: string
        description: Which resource group to deploy to
      container-app-env-name:
        required: false
        type: string
        description: Name of the container apps env to deploy to

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  setup-build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: echo "value=$(echo '${{ inputs.object }}' | jq -c 'keys')" >> $GITHUB_OUTPUT

  build-and-push:
    runs-on: buildjet-8vcpu-ubuntu-2204
    needs: [ setup-build-matrix ]
    if: ${{ !cancelled() && !failure() }}
    strategy:
      matrix:
        value: ${{ fromJson(needs.setup-build-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        # See related issues
        # https://github.com/docker/build-push-action/issues/761#issuecomment-1575006515
        # https://github.com/moby/buildkit/issues/3969
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.6
            network=host
      - uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}/${{ matrix.value }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          file: ${{ fromJson(inputs.object)[matrix.value]['dockerfile'] }}
          tags: ${{ inputs.registry }}/${{ matrix.value }}:${{ fromJson(inputs.object)[matrix.value]['tag-override'] || github.sha }}
          secrets: |
            cloudsmith-api-key=${{ secrets.CLOUDSMITH_API_KEY }}

  setup-deploy-matrix:
    runs-on: ubuntu-latest
    needs: [ build-and-push ]
    if: ${{ !cancelled() && !failure() }}
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: |
          echo "value=$(echo '${{ inputs.object }}' | jq -c 'with_entries(select(.value | has("container-app-name"))) | keys')" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: [ setup-deploy-matrix ]
    if: ${{ !cancelled() && !failure() }}
    strategy:
      matrix:
        value: ${{ fromJson(needs.setup-deploy-matrix.outputs.matrix) }}
    steps:
      - name: Log in to Azure
        uses: azure/login@v2
        with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy container app
        uses: azure/container-apps-deploy-action@v2
        with:
         containerAppName: ${{ fromJson(inputs.object)[matrix.value]['container-app-name'] }}
         containerAppEnvironment: ${{ inputs.container-app-env-name }}
         resourceGroup: ${{ inputs.container-app-resource-group }}
         imageToDeploy: ${{ inputs.registry }}/${{ matrix.value }}:${{ fromJson(inputs.object)[matrix.value]['tag-override'] || github.sha }}
