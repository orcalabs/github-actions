name: Run npm checks

on:
  workflow_call:
    inputs:
      src-dir:
        type: string
        required: false
        default: .
        description: Path to source code
      prettier:
        type: boolean
        required: false
        default: true
        description: Whether to run prettier job
      eslint:
        type: boolean
        required: false
        default: true
        description: Whether to run eslint job
      tsc:
        type: boolean
        required: false
        default: true
        description: Whether to run tsc job

jobs:
  prettier:
    if: inputs.prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ format('{0}/node_modules', inputs.src-dir) }}
          key: ${{ runner.os }}-${{ hashFiles(format('{0}/package*.json', inputs.src-dir)) }}
      - name: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ${{ inputs.src-dir }}
          npm ci
      - name: prettier
        run: |
          cd ${{ inputs.src-dir }}
          npx prettier -c .

  eslint:
    if: inputs.eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ format('{0}/node_modules', inputs.src-dir) }}
          key: ${{ runner.os }}-${{ hashFiles(format('{0}/package*.json', inputs.src-dir)) }}
      - name: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ${{ inputs.src-dir }}
          npm ci
      - name: eslint
        run: |
          cd ${{ inputs.src-dir }}
          npm run lint -- --max-warnings 0

  tsc:
    if: inputs.eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ format('{0}/node_modules', inputs.src-dir) }}
          key: ${{ runner.os }}-${{ hashFiles(format('{0}/package*.json', inputs.src-dir)) }}
      - name: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ${{ inputs.src-dir }}
          npm ci
      - name: tsc
        run: |
          cd ${{ inputs.src-dir }}
          npx tsc
