name: Docker build and push images

on:
  workflow_call:
    inputs:
      keys:
        required: true
        type: string
        description: List of keys into `object` input
      object:
        required: true
        type: string
        description: JSON object of images to build and push
      aks-repo:
        required: false
        type: string
        description: Aks repository to update image tags

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: |
          echo "${{ inputs.keys }}" | xargs -I {} printf '{}","' >> temp
          truncate -s-3 temp
          echo "value=[\"$(cat temp)\"]" >> $GITHUB_OUTPUT

  build-and-push:
    runs-on: buildjet-4vcpu-ubuntu-2204
    needs: [ setup-matrix ]
    strategy:
      matrix:
        value: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        # See related issues
        # https://github.com/docker/build-push-action/issues/761#issuecomment-1575006515
        # https://github.com/moby/buildkit/issues/3969
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.6
            network=host
      - uses: docker/login-action@v3
        with:
          registry: ${{ fromJson(inputs.object)[matrix.value]['registry'] }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          file: ${{ fromJson(inputs.object)[matrix.value]['dockerfile'] }}
          tags: ${{ fromJson(inputs.object)[matrix.value]['registry'] }}:${{ github.sha }}
          secrets: |
            git-credentials=${{ secrets.CLOUDSMITH_GIT_API_KEY }}

  update-tags:
    if: ${{ inputs.aks-repo }}
    runs-on: ubuntu-latest
    needs: [ build-and-push ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.aks-repo }}
          token: ${{ secrets.CI_PAT_TOKEN }}
      - name: Install jq
        run: sudo apt install -y jq
      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "4.5.7"
      - name: Update tags
        run: |
          echo '${{ inputs.object }}' > object.json
          for key in $(jq -r 'keys[]' object.json); do
            REGISTRY=$(jq -r --arg KEY $key '.[$KEY].registry' object.json)
            cd $(jq -r --arg KEY $key '.[$KEY]."aks-path"' object.json)
            kustomize edit set image $REGISTRY:${{ github.sha }}
            cd -
          done
          rm object.json
      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PAT_TOKEN }}
        run: |
          git checkout -b ${{ github.event.repository.name }}-${{ github.sha }}
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions
          git commit -am "Update ${{ github.event.repository.name }} image tags"
          git push -u origin HEAD
          gh pr create -B master -H ${{ github.event.repository.name }}-${{ github.sha }} --title 'Merge ${{ github.event.repository.name }}-tag-update' --body 'Created by Github action'
