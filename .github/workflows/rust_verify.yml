name: Rust Verify

on:
  workflow_call:
    inputs:
      dependencies:
        required: false
        type: string
        description: "A list of ubuntu packages to install"
      image-build-command:
        required: false
        type: string
        description: "A command for building docker images"
      src-dir:
        required: false
        default: "src"
        type: string
        description: "Path to rust source code"
      rust-version:
        required: false
        type: string
        description: "Specific rust version to use, defaults to the latest"

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Orca Labs github actions
        uses: orcalabs/github-actions/rust-setup
        with:
          cloudsmith-cargo-registry: ${{ secrets.CLOUDSMITH_CARGO_REGISTRY }}
          rust-version: ${{ inputs.rust-version }}
        # uses: actions/checkout@v3
        # with:
        #   repository: orcalabs/github-actions
        #   ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        #   path: .github/actions
      # - uses: ./.github/actions/rust-setup
      - name: cargo fmt
        run: |
          cd ${{ inputs.src-dir }}
          cargo fmt -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Orca Labs github actions
        uses: actions/checkout@v3
        with:
          repository: orcalabs/github-actions
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          path: .github/actions
      - uses: ./.github/actions/rust-setup
        with:
          dependencies: ${{ inputs.dependencies }}
          cloudsmith-cargo-registry: ${{ secrets.CLOUDSMITH_CARGO_REGISTRY }}
          cloudsmith-git-api-key: ${{ secrets.CLOUDSMITH_GIT_API_KEY }}
          cache-key: clippy-target
          rust-version: ${{ inputs.rust-version }}
      - name: cargo clippy
        run: |
          cd ${{ inputs.src-dir }}
          cargo clippy --all-targets --all-features

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Orca Labs github actions
        uses: actions/checkout@v3
        with:
          repository: orcalabs/github-actions
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          path: .github/actions
      - uses: ./.github/actions/rust-setup
        with:
          dependencies: ${{ inputs.dependencies }}
          cloudsmith-cargo-registry: ${{ secrets.CLOUDSMITH_CARGO_REGISTRY }}
          cloudsmith-git-api-key: ${{ secrets.CLOUDSMITH_GIT_API_KEY }}
          cache-key: doc-target
          rust-version: ${{ inputs.rust-version }}
      - name: cargo doc
        run: |
          cd ${{ inputs.src-dir }}
          cargo doc --no-deps --document-private-items

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Orca Labs github actions
        uses: actions/checkout@v3
        with:
          repository: orcalabs/github-actions
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          path: .github/actions
      - uses: ./.github/actions/rust-setup
        with:
          dependencies: ${{ inputs.dependencies }}
          cloudsmith-cargo-registry: ${{ secrets.CLOUDSMITH_CARGO_REGISTRY }}
          cloudsmith-git-api-key: ${{ secrets.CLOUDSMITH_GIT_API_KEY }}
          cache-key: test-target
          rust-version: ${{ inputs.rust-version }}
      - name: build images
        if: ${{ inputs.image-build-command }}
        run: ${{ inputs.image-build-command }}
      - name: cargo test
        run: |
          cd ${{ inputs.src-dir }}
          cargo test
