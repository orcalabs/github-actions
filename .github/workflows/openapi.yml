name: Update OpenApi specs

on:
  workflow_call:
    inputs:
      src-dir:
        required: false
        default: src
        type: string
        description: Path to rust source code
      dependencies:
        required: false
        type: string
        description: A list of ubuntu packages to install
      rust-version:
        required: false
        type: string
        description: Specific rust version to use, defaults to the latest
      object:
        required: true
        type: string
        description: JSON object of OpenApi specs to generate
      terraform-repo:
        required: true
        type: string
        description: Terraform repository to update specs

jobs:
  openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: orcalabs/github-actions/disk-cleanup@master
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
            repository: ${{ inputs.terraform-repo }}
            token: ${{ secrets.CI_PAT_TOKEN }}
            path: tf-repo
      - uses: orcalabs/github-actions/rust-setup@master
        with:
          dependencies: ${{ inputs.dependencies }}
          cloudsmith-cargo-registry: ${{ secrets.CLOUDSMITH_CARGO_REGISTRY }}
          cloudsmith-git-api-key: ${{ secrets.CLOUDSMITH_GIT_API_KEY }}
          rust-version: ${{ inputs.rust-version }}
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: false
          workspaces: ${{ inputs.src-dir }}
          shared-key: shared
      - name: Generate OpenApi specs
        env:
          SQLX_OFFLINE: true
        run: |
          echo '${{ inputs.object }}' > object.json
          LENGTH=$(jq '. | length' object.json)
          for i in $(seq 0 $(($LENGTH  - 1)) ); do 
              BIN=$(jq -r --arg IDX $i '.[$IDX | tonumber].bin' object.json)
              TF_FILE=tf-repo/$(jq -r --arg IDX $i '.[$IDX | tonumber]."terraform-path"' object.json)
              cargo run --manifest-path ${{ inputs.src-dir }}/Cargo.toml --bin $BIN > $TF_FILE
          done
      - name: Diff OpenApi specs
        id: spec_diff
        run: |
          cd tf-repo
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit and push
        if: steps.spec_diff.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PAT_TOKEN }}
        run: |
          cd tf-repo
          git checkout -b ${{ github.event.repository.name }}-${{ github.sha }}
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions
          git commit -am "Update ${{ github.event.repository.name }} OpenApi specs"
          git push -u origin HEAD
          gh pr create -B master -H ${{ github.event.repository.name }}-${{ github.sha }} --title 'Merge ${{ github.event.repository.name }}-OpenApi-update' --body 'Created by Github action'
